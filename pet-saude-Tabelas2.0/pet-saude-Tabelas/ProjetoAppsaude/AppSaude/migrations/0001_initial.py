# Generated by Django 5.0.1 on 2024-05-21 03:39

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Endereco',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rua', models.CharField(max_length=255)),
                ('numero', models.CharField(max_length=20)),
                ('cidade', models.CharField(max_length=100)),
                ('estado', models.CharField(max_length=100)),
                ('cep', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Imagem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('imagem', models.ImageField(upload_to='locais/')),
            ],
        ),
        migrations.CreateModel(
            name='Telefone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='LocalAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('descricao', models.TextField()),
                ('categoria', models.CharField(choices=[('clinica', 'Clínica'), ('parque', 'Parque'), ('centro_apoio', 'Centro de Apoio')], max_length=50)),
                ('faixa_etaria_recomendada', models.CharField(choices=[('criancas', 'Crianças'), ('adolescentes', 'Adolescentes'), ('adultos', 'Adultos'), ('idosos', 'Idosos')], max_length=50)),
                ('servicos_oferecidos', models.CharField(choices=[('psicoterapia', 'Psicoterapia'), ('grupos_apoio', 'Grupos de Apoio'), ('atividades_fisicas', 'Atividades Físicas')], max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('site', models.URLField()),
                ('validado', models.BooleanField(default=True)),
                ('valor_medio', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('planos_saude', models.TextField(blank=True)),
                ('endereco', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.endereco')),
                ('imagens', models.ManyToManyField(related_name='locais', to='AppSaude.imagem')),
                ('telefones', models.ManyToManyField(blank=True, to='AppSaude.telefone')),
            ],
        ),
        migrations.CreateModel(
            name='HorarioFuncionamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia_semana', models.CharField(choices=[('segunda', 'Segunda-feira'), ('terca', 'Terça-feira'), ('quarta', 'Quarta-feira'), ('quinta', 'Quinta-feira'), ('sexta', 'Sexta-feira'), ('sabado', 'Sábado'), ('domingo', 'Domingo')], max_length=10)),
                ('horario_abertura', models.TimeField()),
                ('horario_fechamento', models.TimeField()),
                ('local', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='horarios_funcionamento', to='AppSaude.localatendimento')),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nome', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('data_nascimento', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, related_name='usuario_groups', to='auth.group')),
                ('locais_cadastrados', models.ManyToManyField(blank=True, related_name='usuarios_cadastrados', to='AppSaude.localatendimento')),
                ('locais_favoritos', models.ManyToManyField(blank=True, related_name='usuarios_favoritos', to='AppSaude.localatendimento')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='usuario_user_permissions', to='auth.permission')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ProblemaSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('resolvido', models.BooleanField(default=False)),
                ('print', models.ImageField(upload_to='prints/')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemaLocalAtendimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('descricao', models.TextField()),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('resolvido', models.BooleanField(default=False)),
                ('local_atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.localatendimento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='AvaliacaoLocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pontuacao', models.IntegerField()),
                ('local_atendimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.localatendimento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='AppSaude.usuario')),
            ],
        ),
        migrations.CreateModel(
            name='ProfissionalSaude',
            fields=[
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='profissional_saude', serialize=False, to='AppSaude.usuario')),
                ('registro_profissional', models.CharField(max_length=128)),
                ('local_atendimento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AppSaude.localatendimento')),
            ],
        ),
    ]
